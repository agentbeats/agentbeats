[scenario]
name = "cybench"
description = "Cybench CTF scenario"
version = "1.0.0"

# Agents to be launched
[[agents]]
name = "green_agent_crypto"
card = "agents/green_agent/agent_card_crypto.toml"
launcher_host = "0.0.0.0"
launcher_port = 8335
agent_host = "0.0.0.0"
agent_port = 8336
model_type = "openai"
model_name = "o4-mini"
tools = ["agents/green_agent/tools.py"]
mcp_servers = ["http://localhost:9001/sse"]

[[agents]]
name = "green_agent_forensics"
card = "agents/green_agent/agent_card_forensics.toml"
launcher_host = "0.0.0.0"
launcher_port = 8337
agent_host = "0.0.0.0"
agent_port = 8338
model_type = "openai"
model_name = "o4-mini"
tools = ["agents/green_agent/tools.py"]
mcp_servers = ["http://localhost:9001/sse"]

[[agents]]
name = "green_agent_pwn"
card = "agents/green_agent/agent_card_pwn.toml"
launcher_host = "0.0.0.0"
launcher_port = 8339
agent_host = "0.0.0.0"
agent_port = 8340
model_type = "openai"
model_name = "o4-mini"
tools = ["agents/green_agent/tools.py"]
mcp_servers = ["http://localhost:9001/sse"]


[[agents]]
name = "green_agent_reverse"
card = "agents/green_agent/agent_card_rev.toml"
launcher_host = "0.0.0.0"
launcher_port = 8341
agent_host = "0.0.0.0"
agent_port = 8342
model_type = "openai"
model_name = "o4-mini"
tools = ["agents/green_agent/tools.py"]
mcp_servers = ["http://localhost:9001/sse"]

[[agents]]
name = "red_agent"
card = "agents/red_agent_card.toml"
launcher_host = "0.0.0.0"
launcher_port = 8060
agent_host = "0.0.0.0"
agent_port = 8061
model_type = "openai"
model_name = "o4-mini"
tools = []
mcp_servers = ["http://localhost:9001/sse", "http://localhost:9003/sse"]


[[agents.participant_requirements]]
  role = "red_agent"
  name = "red_attacker"
  required = true
  participant_agent = "red_agent"

# Launch configuration
[launch]
mode = "separate"  # Options: "tmux", "separate", "current"
tmux_session_name = "agentbeats-cybench"
startup_interval = 1  # seconds between launching each component
wait_for_services = true  # wait for services to be healthy before starting agents
