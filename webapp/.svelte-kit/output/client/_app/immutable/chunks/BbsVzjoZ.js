async function s(r){try{const t=await fetch("/api/agents",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(r)});if(!t.ok){const e=await t.json();throw new Error(e.detail||"Failed to register agent")}return await t.json()}catch(t){throw console.error("Failed to register agent:",t),t}}async function i(r){try{const t=await fetch("/api/agents/card",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({agent_url:r})});if(!t.ok){let e=`Failed to fetch agent card: ${t.status} ${t.statusText}`;try{e=(await t.json()).detail||e}catch{try{const n=await t.text();n.includes("<!doctype")||n.includes("<html")?e="Server returned HTML instead of JSON. The agent URL may be incorrect or the agent service is not running properly.":e=`Server error: ${n.substring(0,200)}`}catch{}}throw new Error(e)}return await t.json()}catch(t){throw console.error("Failed to fetch agent card:",t),t instanceof Error&&(t.message.includes("not valid JSON")||t.message.includes("<!doctype"))?new Error(`The agent URL returned HTML instead of a valid agent card. Please check:
1. Agent service is running
2. URL points to correct agent card endpoint
3. Agent service returns JSON format`):t}}async function c(r){try{const t=await fetch(`/api/agents/${r}`);if(!t.ok){const a=await t.json();throw new Error(a.detail||"Failed to fetch agent")}return await t.json()}catch(t){throw console.error("Failed to fetch agent:",t),t}}async function d(r){try{const t=await fetch("/api/agents/analyze_card",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({agent_card:r})});if(!t.ok){const e=await t.json();throw new Error(e.detail||`Failed to analyze agent card: ${t.status} ${t.statusText}`)}return await t.json()}catch(t){throw console.error("Failed to analyze agent card:",t),t}}export{d as a,i as f,c as g,s as r};
