import { KeyboardSensor, PointerSensor } from '../../sensors/index.js';
import { MeasuringStrategy, MeasuringFrequency } from '../../hooks/utilities/index.js';
import { getClientRect, getTransformAgnosticClientRect } from '../../utilities/rect/index.js';
export const defaultSensors = [
    { sensor: PointerSensor, options: {} },
    { sensor: KeyboardSensor, options: {} },
];
export const defaultData = { current: {} };
export const defaultMeasuringConfiguration = {
    draggable: {
        measure: getTransformAgnosticClientRect,
    },
    droppable: {
        measure: getTransformAgnosticClientRect,
        strategy: MeasuringStrategy.WhileDragging,
        frequency: MeasuringFrequency.Optimized,
    },
    dragOverlay: {
        measure: getClientRect,
    },
};
