import type { ClientRect, UniqueIdentifier } from '../../../../types/index.js';
import type { Snippet } from 'svelte';
import { type Transform, styleObjectToString } from '@dnd-kit-svelte/utilities';
type TransitionGetter = (activatorEvent: Event | null) => string | undefined;
export interface Props {
    as: keyof HTMLElementTagNameMap;
    activatorEvent: Event | null;
    adjustScale?: boolean;
    children?: Snippet;
    className?: string;
    id: UniqueIdentifier;
    rect: ClientRect | null;
    style?: Parameters<typeof styleObjectToString>[0];
    transition?: string | TransitionGetter;
    transform: Transform;
    handleExit: (node: HTMLElement) => void;
    ref: HTMLElement | null;
    onStylesUpdated: (styles: string) => void;
}
declare const PositionedOverlay: import("svelte").Component<Props, {}, "ref">;
type PositionedOverlay = ReturnType<typeof PositionedOverlay>;
export default PositionedOverlay;
