import { getOwnerDocument } from '@dnd-kit-svelte/utilities';
import { AbstractPointerSensor, } from './abstract-pointer-sensor.js';
const events = {
    cancel: { name: 'pointercancel' },
    move: { name: 'pointermove' },
    end: { name: 'pointerup' },
};
export class PointerSensor extends AbstractPointerSensor {
    constructor(props) {
        const { event } = props;
        // Pointer events stop firing if the target is unmounted while dragging
        // Therefore we attach listeners to the owner document instead
        const listenerTarget = getOwnerDocument(event.target);
        super(props, events, listenerTarget);
    }
    static activators = [
        {
            eventName: 'onpointerdown',
            handler: (event, { onActivation }) => {
                if (!event.isPrimary || event.button !== 0) {
                    return false;
                }
                onActivation?.({ event });
                return true;
            },
        },
    ];
}
