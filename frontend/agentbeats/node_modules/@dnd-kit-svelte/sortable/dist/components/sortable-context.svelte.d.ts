import type { Disabled } from '../types/disabled.js';
import type { SortingStrategy } from '../types/strategies.js';
import { type Snippet } from 'svelte';
import { type UniqueIdentifier, type ClientRect } from '@dnd-kit-svelte/core';
export interface Props {
    children: Snippet;
    items: (UniqueIdentifier | {
        id: UniqueIdentifier;
    })[];
    strategy?: SortingStrategy;
    id?: string;
    disabled?: boolean | Disabled;
}
interface ContextDescriptor {
    activeIndex: number;
    containerId: string;
    disabled: Disabled;
    disableTransforms: boolean;
    items: UniqueIdentifier[];
    overIndex: number;
    useDragOverlay: boolean;
    sortedRects: ClientRect[];
    strategy: SortingStrategy;
}
export declare const SortableContextKey: unique symbol;
export declare const defaultSortableContextValue: ContextDescriptor;
export declare function getSortableContext(): ContextDescriptor;
declare const SortableContext: import("svelte").Component<Props, {}, "">;
type SortableContext = ReturnType<typeof SortableContext>;
export default SortableContext;
