import { getScrollableAncestors, getScrollOffsets, getScrollXOffset, getScrollYOffset } from '../scroll/index.js';
const properties = [
    ['x', ['left', 'right'], getScrollXOffset],
    ['y', ['top', 'bottom'], getScrollYOffset],
];
export class Rect {
    constructor(rect, element) {
        const scrollableAncestors = getScrollableAncestors(element);
        const scrollOffsets = getScrollOffsets(scrollableAncestors);
        this.rect = { ...rect };
        this.width = rect.width;
        this.height = rect.height;
        for (const [axis, keys, getScrollOffset] of properties) {
            for (const key of keys) {
                Object.defineProperty(this, key, {
                    get: () => {
                        const currentOffsets = getScrollOffset(scrollableAncestors);
                        const scrollOffsetsDeltla = scrollOffsets[axis] - currentOffsets;
                        return this.rect[key] + scrollOffsetsDeltla;
                    },
                    enumerable: true,
                });
            }
        }
        Object.defineProperty(this, 'rect', { enumerable: false });
    }
    rect;
    width;
    height;
    // The below properties are set by the `Object.defineProperty` calls in the constructor
    // @ts-expect-error Property has no initializer and is not definitely assigned in the constructor
    top;
    // @ts-expect-error Property has no initializer and is not definitely assigned in the constructor
    bottom;
    // @ts-expect-error Property has no initializer and is not definitely assigned in the constructor
    right;
    // @ts-expect-error Property has no initializer and is not definitely assigned in the constructor
    left;
}
