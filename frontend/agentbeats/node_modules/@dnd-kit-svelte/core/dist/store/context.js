import { getContext, hasContext } from 'svelte';
import { defaultMeasuringConfiguration } from '../components/dnd-context/defaults.js';
import { noop } from '../utilities/index.js';
import { DroppableContainersMap } from './constructors.js';
export const defaultPublicContext = {
    activatorEvent: null,
    active: null,
    activeNode: null,
    activeNodeRect: null,
    collisions: null,
    containerNodeRect: null,
    draggableNodes: new Map(),
    droppableRects: new Map(),
    droppableContainers: new DroppableContainersMap(),
    over: null,
    dragOverlay: {
        nodeRef: null,
        rect: null,
        setRef: noop,
    },
    scrollableAncestors: [],
    scrollableAncestorRects: [],
    measuringConfiguration: defaultMeasuringConfiguration,
    measureDroppableContainers: noop,
    windowRect: null,
    measuringScheduled: false,
};
export const defaultInternalContext = {
    activatorEvent: null,
    activators: [],
    active: null,
    activeNodeRect: null,
    ariaDescribedById: {
        draggable: '',
    },
    dispatch: noop,
    draggableNodes: new Map(),
    over: null,
    measureDroppableContainers: noop,
};
export const InternalContextKey = Symbol('InternalContext');
export const PublicContextKey = Symbol('PublicContext');
export function getInternalContext() {
    if (!hasContext(InternalContextKey))
        return defaultInternalContext;
    return getContext(InternalContextKey)();
}
